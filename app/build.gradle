apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.challenge.spiderapp"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "private_key", "\""+getApiKey()+"\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile "com.jakewharton:butterknife:8.1.0"
    apt "com.jakewharton:butterknife-compiler:8.1.0"
    compile 'com.navercorp.volleyextensions:volley-requests:2.0.0'
    compile 'com.navercorp.volleyextensions:volley-caches:2.0.0'

}

def getApiKey(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('local.properties')))
    return props['private_key']
}
